apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'

android {
    compileSdkVersion 27
    buildToolsVersion '26.0.2'

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 26
        versionCode 1
        versionName "1.0.2  "

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }


}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    api 'com.android.support:appcompat-v7:27.0.2'
    api 'com.android.support:design:27.0.2'
    api 'com.android.support:cardview-v7:27.0.2'
    implementation 'net.igenius:customcheckbox:1.3'

    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.android.support:support-v4:27.0.2'
    implementation 'com.github.bumptech.glide:glide:4.5.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.5.0'
}

group = 'com.github.rzilyn'
version = '1.0.2'

task generateSourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier 'sources'
}

task generateJavadocs(type: Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath()
            .join(File.pathSeparator))
}

task generateJavaDocsJar(type: Jar) {
    from generateJavadocs.destinationDir
    classifier 'javadoc'
    generateJavaDocsJar.dependsOn generateJavadocs
}

artifacts {
    archives generateJavaDocsJar
    archives generateSourcesJar
}

def git = 'https://github.com/RizalFahmi27/AnotherFilePicker.git'
def website = 'https://github.com/RizalFahmi27/AnotherFilePicker'

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'

                // Add your description here
                name 'com.github.rzilyn.multifilepicker'
                description = 'File picker'
                url website

                // Set your license
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'rzilyn'
                        name 'Mohammad Rizal Fahmi Dwi Putra'
                        email 'rizalfahmi27@gmail.com'
                    }
                }
                scm {
                    connection git
                    developerConnection git
                    url website
                }
            }
        }
    }
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    pkg {
        repo = 'maven'
        name = 'com.github.rzilyn.multifilepicker'
        userOrg = 'rzilyn'
        version {
            name = '1.0.1-tuts'
            released = new Date()
            vcsTag = '1.0.1'
        }

        licenses = ['Apache-2.0']
        vcsUrl = git
        websiteUrl = website
    }
    configurations = ['archives']
}
